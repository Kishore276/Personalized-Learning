{
  "course_id": 3,
  "course_title": "Web Development with PHP",
  "language": "php",
  "questions": [
    {"id": 1, "level": "basic", "question": "What does PHP stand for?", "options": ["Personal Home Page", "PHP: Hypertext Preprocessor", "Private Home Page", "Public Hypertext Processor"], "correct_answer": "PHP: Hypertext Preprocessor", "explanation": "PHP originally stood for Personal Home Page, but now means PHP: Hypertext Preprocessor."},
    {"id": 2, "level": "basic", "question": "Which symbol is used to start a variable in PHP?", "options": ["$", "#", "@", "%"], "correct_answer": "$", "explanation": "All PHP variables start with the $ symbol."},
    {"id": 3, "level": "basic", "question": "Which tag is used to write PHP code in an HTML file?", "options": ["<php>", "<?php ?>", "<script>", "<? ?>"], "correct_answer": "<?php ?>", "explanation": "PHP code is written between <?php and ?> tags."},
    {"id": 4, "level": "basic", "question": "Which function is used to display output in PHP?", "options": ["echo", "print", "display", "show"], "correct_answer": "echo", "explanation": "The echo statement is used to output text in PHP."},
    {"id": 5, "level": "basic", "question": "Which superglobal is used to collect form data in PHP?", "options": ["$_POST", "$_GET", "$form", "$_DATA"], "correct_answer": "$_POST", "explanation": "$_POST is used to collect form data sent with POST method."},
    {"id": 6, "level": "basic", "question": "How do you concatenate strings in PHP?", "options": ["Using + operator", "Using . operator", "Using & operator", "Using , operator"], "correct_answer": "Using . operator", "explanation": "PHP uses the . (dot) operator to concatenate strings."},
    {"id": 7, "level": "basic", "question": "Which PHP function is used to get the length of a string?", "options": ["strlen()", "length()", "size()", "count()"], "correct_answer": "strlen()", "explanation": "strlen() returns the number of characters in a string."},
    {"id": 8, "level": "basic", "question": "How do you define a constant in PHP?", "options": ["define()", "const", "constant()", "set()"], "correct_answer": "define()", "explanation": "define() function is used to create constants in PHP."},
    {"id": 9, "level": "basic", "question": "Which operator is used to check if two values are equal in PHP?", "options": ["=", "==", "===", "!="], "correct_answer": "==", "explanation": "== operator checks for equality, while === checks for identity (same type and value)."},
    {"id": 10, "level": "basic", "question": "How do you create an array in PHP?", "options": ["array()", "[]", "Both are correct", "list()"], "correct_answer": "Both are correct", "explanation": "PHP arrays can be created using array() or [] syntax."},
    {"id": 11, "level": "basic", "question": "Which superglobal contains information about headers, paths, and script locations?", "options": ["$_SERVER", "$_ENV", "$_REQUEST", "$_SESSION"], "correct_answer": "$_SERVER", "explanation": "$_SERVER contains information about headers, paths, and script locations."},
    {"id": 12, "level": "basic", "question": "How do you include a file in PHP that stops execution if file is not found?", "options": ["include", "require", "import", "load"], "correct_answer": "require", "explanation": "require stops execution if the file is not found, while include only produces a warning."},
    {"id": 13, "level": "basic", "question": "Which function is used to redirect to another page in PHP?", "options": ["redirect()", "header()", "goto()", "location()"], "correct_answer": "header()", "explanation": "header('Location: page.php') is used to redirect in PHP."},
    {"id": 14, "level": "basic", "question": "How do you check if a variable is set in PHP?", "options": ["isset()", "is_set()", "exists()", "defined()"], "correct_answer": "isset()", "explanation": "isset() checks whether a variable is set and is not NULL."},
    {"id": 15, "level": "basic", "question": "Which function converts a string to lowercase in PHP?", "options": ["lower()", "strtolower()", "tolower()", "lowercase()"], "correct_answer": "strtolower()", "explanation": "strtolower() converts all characters in a string to lowercase."},
    {"id": 16, "level": "basic", "question": "How do you get user input from a form with GET method?", "options": ["$_GET", "$_POST", "$_REQUEST", "$_FORM"], "correct_answer": "$_GET", "explanation": "$_GET superglobal contains data sent via GET method."},
    {"id": 17, "level": "basic", "question": "Which function is used to connect to a MySQL database in modern PHP?", "options": ["mysql_connect()", "mysqli_connect()", "db_connect()", "connect_db()"], "correct_answer": "mysqli_connect()", "explanation": "mysqli_connect() is the modern way to connect to MySQL databases."},
    {"id": 18, "level": "basic", "question": "How do you escape special characters in a string for database insertion?", "options": ["addslashes()", "mysqli_real_escape_string()", "escape()", "htmlspecialchars()"], "correct_answer": "mysqli_real_escape_string()", "explanation": "mysqli_real_escape_string() properly escapes special characters for database queries."},
    {"id": 19, "level": "basic", "question": "Which function is used to get the current date and time in PHP?", "options": ["now()", "date()", "time()", "current_time()"], "correct_answer": "date()", "explanation": "date() function formats a local time/date and returns the formatted date string."},
    {"id": 20, "level": "basic", "question": "How do you end a PHP statement?", "options": ["With a period", "With a semicolon", "With a comma", "With a colon"], "correct_answer": "With a semicolon", "explanation": "Every PHP statement must end with a semicolon (;)."},
    {"id": 21, "level": "intermediate", "question": "How do you connect to a MySQL database in PHP?", "options": ["mysqli_connect()", "mysql_connect()", "db_connect()", "connect()"], "correct_answer": "mysqli_connect()", "explanation": "mysqli_connect() is used to connect to MySQL databases in PHP."},
    {"id": 22, "level": "intermediate", "question": "Which statement is used to include another PHP file?", "options": ["require", "include", "import", "add"], "correct_answer": "include", "explanation": "The include statement is used to include files in PHP."},
    {"id": 23, "level": "intermediate", "question": "How do you start a session in PHP?", "options": ["session_start()", "start_session()", "begin_session()", "open_session()"], "correct_answer": "session_start()", "explanation": "session_start() is used to begin a session in PHP."},
    {"id": 24, "level": "intermediate", "question": "Which function is used to send an email in PHP?", "options": ["mail()", "sendmail()", "email()", "php_mail()"], "correct_answer": "mail()", "explanation": "mail() is the built-in function to send emails in PHP."},
    {"id": 25, "level": "intermediate", "question": "Which array type is used to store key-value pairs in PHP?", "options": ["Indexed array", "Associative array", "Multidimensional array", "Simple array"], "correct_answer": "Associative array", "explanation": "Associative arrays use named keys for values."},
    {"id": 26, "level": "intermediate", "question": "How do you validate an email address in PHP?", "options": ["filter_var()", "validate_email()", "is_email()", "check_email()"], "correct_answer": "filter_var()", "explanation": "filter_var() with FILTER_VALIDATE_EMAIL validates email addresses in PHP."},
    {"id": 27, "level": "intermediate", "question": "Which function is used to hash passwords securely in PHP?", "options": ["md5()", "password_hash()", "sha1()", "crypt()"], "correct_answer": "password_hash()", "explanation": "password_hash() is recommended for secure password hashing."},
    {"id": 28, "level": "intermediate", "question": "How do you handle file uploads in PHP?", "options": ["$_FILES", "$_UPLOAD", "$_POST", "$_GET"], "correct_answer": "$_FILES", "explanation": "$_FILES superglobal contains information about uploaded files."},
    {"id": 29, "level": "intermediate", "question": "Which function is used to parse JSON in PHP?", "options": ["json_decode()", "parse_json()", "decode_json()", "json_parse()"], "correct_answer": "json_decode()", "explanation": "json_decode() converts JSON string to PHP variable."},
    {"id": 30, "level": "intermediate", "question": "How do you prevent CSRF attacks in PHP?", "options": ["Using tokens", "Using sessions", "Using cookies", "Using headers"], "correct_answer": "Using tokens", "explanation": "CSRF tokens help prevent Cross-Site Request Forgery attacks."},
    {"id": 31, "level": "intermediate", "question": "Which function is used to create a secure random token in PHP?", "options": ["random_bytes()", "rand()", "mt_rand()", "uniqid()"], "correct_answer": "random_bytes()", "explanation": "random_bytes() generates cryptographically secure random bytes."},
    {"id": 32, "level": "intermediate", "question": "How do you perform database transactions in PHP?", "options": ["BEGIN; COMMIT;", "mysqli_begin_transaction()", "Both are correct", "transaction_start()"], "correct_answer": "Both are correct", "explanation": "You can use SQL commands or PHP mysqli functions for transactions."},
    {"id": 33, "level": "intermediate", "question": "Which PHP extension is used for working with databases?", "options": ["PDO", "MySQLi", "Both PDO and MySQLi", "MySQL"], "correct_answer": "Both PDO and MySQLi", "explanation": "Both PDO and MySQLi are modern PHP extensions for database operations."},
    {"id": 34, "level": "intermediate", "question": "How do you handle errors in PHP?", "options": ["try-catch blocks", "error_reporting()", "set_error_handler()", "All of the above"], "correct_answer": "All of the above", "explanation": "PHP offers multiple ways to handle errors including try-catch, error reporting, and custom handlers."},
    {"id": 35, "level": "intermediate", "question": "Which function is used to sanitize user input in PHP?", "options": ["htmlspecialchars()", "filter_var()", "strip_tags()", "All of the above"], "correct_answer": "All of the above", "explanation": "Different functions are used for different types of input sanitization."},
    {"id": 36, "level": "intermediate", "question": "How do you create a cookie in PHP?", "options": ["setcookie()", "create_cookie()", "cookie_set()", "make_cookie()"], "correct_answer": "setcookie()", "explanation": "setcookie() function is used to create cookies in PHP."},
    {"id": 37, "level": "intermediate", "question": "Which function is used to destroy a session in PHP?", "options": ["session_destroy()", "destroy_session()", "session_end()", "end_session()"], "correct_answer": "session_destroy()", "explanation": "session_destroy() removes all session data."},
    {"id": 38, "level": "intermediate", "question": "How do you handle multiple file uploads in PHP?", "options": ["Use array notation in form", "Loop through $_FILES", "Both are correct", "Use multiple forms"], "correct_answer": "Both are correct", "explanation": "Use array notation in HTML form and loop through $_FILES array."},
    {"id": 39, "level": "intermediate", "question": "Which function is used to get file information in PHP?", "options": ["pathinfo()", "fileinfo()", "file_get_info()", "get_file_info()"], "correct_answer": "pathinfo()", "explanation": "pathinfo() returns information about file path components."},
    {"id": 40, "level": "intermediate", "question": "How do you create a prepared statement in PDO?", "options": ["prepare()", "statement()", "query_prepare()", "create_statement()"], "correct_answer": "prepare()", "explanation": "PDO's prepare() method creates prepared statements for secure database queries."},
    {"id": 41, "level": "advanced", "question": "What is an ORM in PHP web development?", "options": ["Object Relational Mapping", "Online Resource Manager", "Object Resource Model", "Open Relational Module"], "correct_answer": "Object Relational Mapping", "explanation": "ORM stands for Object Relational Mapping, used for database abstraction."},
    {"id": 42, "level": "advanced", "question": "Which PHP framework uses MVC architecture?", "options": ["Laravel", "WordPress", "Drupal", "Joomla"], "correct_answer": "Laravel", "explanation": "Laravel is a popular PHP framework that uses MVC architecture."},
    {"id": 43, "level": "advanced", "question": "How do you prevent SQL injection in PHP?", "options": ["Using prepared statements", "Using $_GET", "Using echo", "Using cookies"], "correct_answer": "Using prepared statements", "explanation": "Prepared statements help prevent SQL injection attacks."},
    {"id": 44, "level": "advanced", "question": "Which PHP extension is commonly used for RESTful APIs?", "options": ["cURL", "PDO", "GD", "mbstring"], "correct_answer": "cURL", "explanation": "cURL is used for making HTTP requests in PHP, useful for APIs."},
    {"id": 45, "level": "advanced", "question": "What is Composer in PHP development?", "options": ["Dependency manager", "Code compiler", "Web server", "Database manager"], "correct_answer": "Dependency manager", "explanation": "Composer is a dependency management tool for PHP."},
    {"id": 46, "level": "advanced", "question": "Which design pattern is commonly used in PHP frameworks?", "options": ["MVC", "Singleton", "Factory", "Observer"], "correct_answer": "MVC", "explanation": "Model-View-Controller (MVC) is widely used in PHP frameworks."},
    {"id": 47, "level": "advanced", "question": "How do you implement autoloading in PHP?", "options": ["spl_autoload_register()", "autoload()", "require_autoload()", "include_auto()"], "correct_answer": "spl_autoload_register()", "explanation": "spl_autoload_register() is used to register custom autoload functions."},
    {"id": 48, "level": "advanced", "question": "What is PSR in PHP development?", "options": ["PHP Standards Recommendation", "PHP Syntax Rules", "PHP Security Requirements", "PHP Server Requirements"], "correct_answer": "PHP Standards Recommendation", "explanation": "PSR stands for PHP Standards Recommendation, coding standards for PHP."},
    {"id": 49, "level": "advanced", "question": "Which function is used for output buffering in PHP?", "options": ["ob_start()", "buffer_start()", "output_begin()", "start_buffer()"], "correct_answer": "ob_start()", "explanation": "ob_start() begins output buffering in PHP."},
    {"id": 50, "level": "advanced", "question": "How do you create custom exceptions in PHP?", "options": ["Extend Exception class", "Use exception()", "Create new Exception", "Define exception"], "correct_answer": "Extend Exception class", "explanation": "Custom exceptions are created by extending the Exception class."},
    {"id": 51, "level": "advanced", "question": "What is the purpose of namespaces in PHP?", "options": ["Avoid naming conflicts", "Organize code", "Improve performance", "Both A and B"], "correct_answer": "Both A and B", "explanation": "Namespaces help avoid naming conflicts and organize code into logical groups."},
    {"id": 52, "level": "advanced", "question": "How do you implement dependency injection in PHP?", "options": ["Constructor injection", "Setter injection", "Interface injection", "All of the above"], "correct_answer": "All of the above", "explanation": "PHP supports multiple types of dependency injection patterns."},
    {"id": 53, "level": "advanced", "question": "What is the Repository pattern in PHP?", "options": ["Data access abstraction", "UI pattern", "Security pattern", "Performance pattern"], "correct_answer": "Data access abstraction", "explanation": "Repository pattern provides an abstraction layer for data access."},
    {"id": 54, "level": "advanced", "question": "Which tool is used for PHP code quality analysis?", "options": ["PHPStan", "PHPMD", "PHP_CodeSniffer", "All of the above"], "correct_answer": "All of the above", "explanation": "Multiple tools are available for PHP code quality analysis."},
    {"id": 55, "level": "advanced", "question": "How do you implement caching in PHP applications?", "options": ["Redis", "Memcached", "File-based caching", "All of the above"], "correct_answer": "All of the above", "explanation": "PHP supports various caching mechanisms including Redis, Memcached, and file-based caching."},
    {"id": 56, "level": "advanced", "question": "What is the Service Container pattern in PHP?", "options": ["Dependency injection container", "Service locator", "Registry pattern", "Factory pattern"], "correct_answer": "Dependency injection container", "explanation": "Service Container is a dependency injection container that manages object dependencies."},
    {"id": 57, "level": "advanced", "question": "How do you implement rate limiting in PHP APIs?", "options": ["Using middleware", "Database tracking", "Redis counters", "All of the above"], "correct_answer": "All of the above", "explanation": "Rate limiting can be implemented using various approaches in PHP."},
    {"id": 58, "level": "advanced", "question": "What is the Observer pattern in PHP?", "options": ["Behavioral design pattern", "Creational pattern", "Structural pattern", "Architectural pattern"], "correct_answer": "Behavioral design pattern", "explanation": "Observer is a behavioral design pattern that defines a one-to-many dependency."},
    {"id": 59, "level": "advanced", "question": "How do you implement event-driven architecture in PHP?", "options": ["Event listeners", "Event dispatchers", "Message queues", "All of the above"], "correct_answer": "All of the above", "explanation": "Event-driven architecture uses event listeners, dispatchers, and message queues."},
    {"id": 60, "level": "advanced", "question": "What is the Command pattern in PHP web development?", "options": ["Encapsulates requests as objects", "Database command", "Terminal command", "Server command"], "correct_answer": "Encapsulates requests as objects", "explanation": "Command pattern encapsulates a request as an object, allowing you to parameterize clients with different requests."}
  ]
}